from django import template

import re

register = template.Library()

# словарь плохих слов
bad_words = {'кривляка', 'урод', 'леший', 'свинья', 'потаскуха', 'стервец', 'ершится', 'мартышка', 'скряга', 'трутень', 'залупа', 'моль', 'пьявка', 'аспид', 'профурсетка', 'желчный', 'шизик', 'морда', 'вшивота', 'позорный', 'стерва', 'приставучий репей', 'бестия', 'квасить', 'белены объелся', 'чувырла', 'тормоз', 'дятел', 'расшивоха', 'гандон', 'аморальный', 'напыщенный индюк', 'профура', 'паскуда', 'тварь', 'недоделок', 'пес', 'вошь на гребешке', 'шелупонь', 'козья морда', 'шкура', 'пижон', 'хабалка', 'дурак', 'хам', 'хер', 'грубиян', 'безмозглая курица', 'шлюха', 'шибздик', 'дегенерат', 'цугундер', 'змея', 'поганка', 'шантрапа', 'облезлый', 'геморрой', 'конявый', 'мандавошка', 'пустобрех', 'зюзя', 'стукач', 'тупица', 'та ещё жучка', 'с кондачка', 'давить жабу', 'алкаш', 'халтома', 'проститутка', 'кощей', 'щегол', 'хмырь', 'волки позорные', 'баран', 'назойливая муха', 'гусыня', 'шмаровоз', 'клубничка', 'пакостник', 'олень', 'погань', 'мразь', 'разделать под орех', 'бездарь', 'дурной', 'солдафон', 'пройдоха', 'барыга', 'хана', 'глиста ходячая', 'павлин', 'лапотник', 'мордоворот', 'рыло', 'гнусь', 'мозгляк', 'боров', 'вобла сушеная', 'мент', 'шмара', 'крыса', 'брехун', 'дрянь', 'банный лист', 'шавка', 'ворюга', 'стеллерова газель', 'кобыла', 'дать в репу', 'шут гороховый', 'развратник', 'щенок', 'мудак', 'придурок', 'шалава', 'ворона ловить', 'под шафе', 'хит', 'шмакодявка', 'душной козел', 'лахудра', 'дерево', 'сиволапый', 'сын', 'лох', 'кикимора', 'засранец', 'рвань', 'дистрофик', 'сволочь', 'залить зенки', 'омерзительный', 'филькина грамота', 'шушера', 'вася бардуль', 'ханыга', 'осиновый лист', 'мегера', 'мурло', 'бузить', 'шпана', 'кобызиться', 'вшивый', 'фуфло', 'сивый мерин', 'страхолюдина', 'пидор', 'урка', 'недотепа', 'старая перечница', 'рогоносец', 'сыч', 'хуже горькой редьки', 'липовый диплом', 'кандибобер', 'пропойца', 'чучело', 'олух царя небесного', 'вонючий', 'ночная бабочка', 'вонючка', 'холуй', 'тупой', 'моська', 'корявый', 'финтифлюшка', 'подхалим', 'нахал', 'подлец', 'трепло', 'ублюдок', 'горилла', 'конь педальный', 'осёл', 'без царя в голове', 'образина', 'бухать', 'раззява', 'говно', 'мягкотелый', 'хапуга', 'беспредел', 'пердун', 'чувырло', 'язва', 'каракатица', 'корова', 'безмозглый', 'лярва', 'лопух', 'халявщик', 'хорёк', 'быдло', 'гнида', 'карга', 'обалдуй', 'дерьмо', 'стиляга', 'жук навозный', 'швабра', 'прошмандовка', 'фраер', 'дубина стоеросовая', 'балбес', 'шельма', 'сексот', 'задрот', 'харя'}


@register.filter()
def censor(text):
    # Создаем регулярное выражение для поиска всех слов (с учетом апострофов и дефисов)
    words = re.finditer(r"([\w'-]+|\S)", text)
    result = []

    for match in words:
        word = match.group()
        # Проверяем, является ли токен словом (а не знаком препинания)
        if word.isalpha():
            lower_word = word.lower()
            if lower_word in bad_words:
                # Сохраняем первую букву в оригинальном регистре, остальные заменяем *
                result.append(f' {word[0] + '*' * (len(word) - 1)}' )
            else:
                result.append(f' {word} ')
        else:
            # Оставляем знаки препинания и пробелы как есть
            result.append(word)
    return ''.join(result)


def checking_words(text):
    words = re.finditer(r"([\w'-]+|\S)", text)
    has_bad_words = False  # изначально предполагаем, что плохих слов нет
    result = []

    for match in words:
        word = match.group()
        if word.isalpha():
            lower_word = word.lower()
            if lower_word in bad_words:
                result.append(f' {word[0] + '*' * (len(word) - 1)}')
                has_bad_words = True  # нашли плохое слово
            else:
                result.append(f' {word} ')
        else:
            result.append(word)

    return ''.join(result), has_bad_words